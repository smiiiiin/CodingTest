// 2252 줄 세우기: DAG
#include <iostream>
#include <vector>
#include <queue>
using namespace std;

int n,m; int inDegree[32001]; //나를 향하는 선들 (내가 작동하려면 그 전에 해야할일들 개수)
vector<int> graph[32001];
 
void DAG(void){
    queue<int> q;
    for(int i=1;i<=n;i++){ if(inDegree[i]==0) q.push(i);}
    while(!q.empty()){
        int cur= q.front(); cout<<cur<<" "; q.pop();
        for(auto next: graph[cur]){ //나 나가면서 너네 할일 하나씩 줄어들었지? 나다음에 너네들이였으니깐 
            inDegree[next]--;
            if(inDegree[next]==0) q.push(next);}}} //그렇게 앞에 할일이 없어지면 나도 나갈 수 있다 

 
int main() {
    ios_base::sync_with_stdio(false); cin.tie(NULL);cout.tie(NULL);
    cin >> n >> m;
    
    for(int i = 0; i < m; i++){
        int a, b; cin >> a >> b; // a->b를 의미
        graph[a].push_back(b); inDegree[b]++;}

    DAG();
    return 0;}
