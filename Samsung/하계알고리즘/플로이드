// 11404 플로이드
// 플로이드
#include <iostream>
#include <vector>
using namespace std;

#define MAX 101 //범위도 정말 중요해!!
#define INF 987654321
int ans[MAX][MAX];
int n;

void floyd(){
    for(int i=1;i<=n;i++){
        for(int f=1;f<=n;f++){
            for(int t=1;t<=n;t++){
                
                //f->i 로의 길이 없거나, i->t로의 길이 없으면, update대상이 아니다
                if(ans[f][i]==INF ||ans[i][t]==INF ) continue;
                if(ans[f][t]> ans[f][i]+ans[i][t]){
                    ans[f][t]=ans[f][i]+ans[i][t];
                }
            }
        }
    }
    
}

int main(void) {
    ios_base::sync_with_stdio(false); cin.tie(NULL);
    int m,a,b,c; cin>>n>>m;
    
    for(int y=1;y<=n;y++){ //ans infinite로 초기화
        for(int x=1;x<=n;x++){
            ans[y][x]=INF;
        }}
    
    for(int i=1;i<=m;i++){ //입력
        cin>>a>>b>>c;
        
        //시작도시와 도착도시의 연결은 하나가 아닐 수도 있다!!! (문제 잘 보기) 
        if(c<ans[a][b]) ans[a][b]=c;
    }
    
    floyd();
    
    for(int y=1;y<=n;y++){ //ans infinite로 초기화
        for(int x=1;x<=n;x++){
            if(y==x || ans[y][x]==INF) cout<<0<<" ";
            else cout<< ans[y][x] <<" ";
        }
        cout<<"\n";
    }
    
    return 0;}
