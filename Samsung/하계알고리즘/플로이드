// 11404 플로이드
#include<iostream>
#include<vector>
#include<queue>
#define INF 987654321 //int 범위는 0이 6개! (=백만)
#define MAX 101
using namespace std;

//입출력 only one
int ans[MAX][MAX]; // ! 푹푹 벡터 초기화, max크기만큼 다 inf로

int n,m;

void floyd(){
    for(int i=1;i<=n;i++){
        for(int f=1;f<=n;f++){
            for(int t=1;t<=n;t++){
                // 이건 왜할까?
                if(ans[f][i]==INF || ans[i][t]==INF) continue;
                
                if(ans[f][t]>ans[f][i]+ans[i][t]){
                    ans[f][t]=ans[f][i]+ans[i][t];}}}}}

int main(){
    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);
    int a,b,c;
    cin>>n>>m;
    for(int y=1;y<=n;y++){
        for(int x=1;x<=n;x++){
            ans[y][x]=INF;}}
    
    for(int y=1;y<=m;y++){
        cin>>a>>b>>c;
        //어차피 처음 초기화할때 한번 뿐이고 INF보다 c는 다 작은데 왜 값이 다르게 나올까?
        ans[a][b]= min(ans[a][b],c);
            
        }
   
    
    floyd();
    
    for(int y=1;y<=n;y++){
        for(int x=1;x<=n;x++){
            if(y==x || ans[y][x]==INF) cout<<0<<" ";
            else cout<<ans[y][x]<<" ";
        }
        cout<<"\n";
    }
    
    return 0;
    }
