// 11657 타임머신 : 벨만포드 노드 1000단위까지, 가중치가 10000* 6000
// int 범위는 2147000000 이므로 저 가중치를 6천만 x 노드개수 (500) 이므로 int를 벗어난다
#include <iostream>
#include <vector>
#include <cstring>
#define MAX 2001 //0이 3개까지 5,3,2(다익, 벨만, 플로)
#define INF 987654321
using namespace std;
// 입력 arr[]은 내가 원하는 얘가 있으니까 자식노드라고 생각
bool infinite_cycle;
vector<pair<int,int>> adj[MAX]; vector<long long> ans(MAX,INF);
int n,m;


void bellman_ford( int node) {
    ans[node]=0;
    for(int y=1;y<=n;y++){
        for(int cur=1;cur<=n;cur++){
            for( auto next: adj[cur]){
                if(ans[cur]==INF) continue;
                if(ans[next.first]>ans[cur]+next.second){
                    ans[next.first]=ans[cur]+next.second;
                    if(y==n) infinite_cycle=1;}
            }}}}



int main() {
    ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);
    cin>>n>>m;
    int a,b,c;
    for(int i=1;i<=m;i++){
        cin>>a>>b>>c; adj[a].push_back({b,c});
    }
    bellman_ford(1);
    if(infinite_cycle) cout<<-1<<"\n";
    else {
        for(int y=2;y<=n;y++){
            cout<< (ans[y]==INF ?  -1 : ans[y])<<"\n";
        }
    }
    
    return 0;}


