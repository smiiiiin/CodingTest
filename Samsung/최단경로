// 1753 최단경로: 그래프 이론, 다익스트라
#include <iostream>
#include <vector>
#include <queue>
#define INF 987654321
#define MAX 20001
using namespace std;

struct NODE{
    int to_node, cost;
    NODE(int a, int b){to_node=a; cost=b;}
    bool operator< (const NODE n)const {return n.cost<cost;}
};

vector<NODE> adj[MAX]; //입력
vector<int>ans(MAX ,INF);//출력 !! 핵중요! 
//int ans[MAX]; // 이러고 memset으로 INF 초기화하면 답이 -213384293막 이런식으로 나온다 일단 외우자
priority_queue<NODE> pq;


void daijkstra(int starter){
    ans[starter]=0; pq.push(NODE(starter,0));
    while(!pq.empty()){
        int cn= pq.top().to_node; pq.pop(); //int cc=pq.top().cost;
        for(auto next: adj[cn]){
            int nn= next.to_node; int nc= ans[cn]+ next.cost;
            if(ans[nn]> nc) {ans[nn]=nc; pq.push(next);}
        }
    }
}

int main(void) {
    ios_base::sync_with_stdio(false); cin.tie(NULL);
    int n, m; cin >> n >> m;
    int s; cin>>s;
    for(int i = 0; i < m; i++) {
        int a,b,c;
        cin >> a>>b>>c;
        adj[a].push_back(NODE(b,c));
    }
    daijkstra(s);
    
    for(int i=1;i<=n;i++){
        cout<< (ans[i]!=INF ? to_string(ans[i]): "INF")<<"\n";
    }
    
    return 0;
}
