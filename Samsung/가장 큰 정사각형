// 1915 가장 큰 정사각형
#include <cstdio>
#include <algorithm>
#include <vector>
using namespace std;

int n, m; int map[1001][1001];
int dp[1001][1001]; // 내 좌표까지 1로만 이뤄진 정사각형 크기 중 MAX

int main() {
    // cin.tie(0); cout.tie(0); ios_base::sync_with_stdio(false);
    scanf("%d %d",&n,&m);
    for(int y=1;y<=n;y++){
        for(int x=1;x<=m;x++){
            scanf("%1d",&map[y][x]);
        }
    }
    
    //맨 윗줄의 경우 0이면 0, 1이면 1이다
    for(int x=1;x<=m;x++) dp[1][x]= map[1][x];
    for(int y=1;y<=n;y++) dp[y][1]= map[y][1];
    
    for(int y=1;y<=n;y++){
        for(int x=1;x<=m;x++){
            if(y==1||x==1) continue;
            if(map[y][x]==0) dp[y][x]=0;
            else{
                // 사각형이 커지려면 3가지 값중 가장 작은 값에 의존할 수 밖에 없음
                dp[y][x]= min(min(dp[y][x-1],dp[y-1][x]),dp[y-1][x-1] )+1;}
        }}
    return 0;}
