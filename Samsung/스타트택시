// 19238 스타트택시
#include <iostream>
#include <vector>
#include <queue>
#include <cstring>

using namespace std;

int n, m, oil,ty,tx,map[21][21], dist[403], passenger[21][21];
bool visited[21][21];
int dy[4] = {-1, 1, 0, 0}; int dx[4] = {0, 0, -1, 1};
pair<int, int> start[403], end[403];

int bfs(int sy, int sx, int ey, int ex) {
    queue<pair<int, int>> q;
    memset(visited, 0, sizeof(visited));
    q.push({sy, sx});
    visited[sy][sx] = true;
    int ret = 0;
    while (!q.empty()) {
        int sz = q.size();
        while (sz--) {
            int cy = q.front().first; int cx = q.front().second; q.pop();
            
            if (cy == ey && cx == ex) return ret;

            for (int k = 0; k < 4; k++) {
                int ny = cy + dy[k]; int nx = cx + dx[k];
                if (ny < 1 || nx < 1 || ny > n || nx > n) continue;
                if (visited[ny][nx] || map[ny][nx] == 1) continue;
                visited[ny][nx] = true;
                q.push({ny, nx});}}
        ret++;}
    return -1;}

bool get_customer() {
    memset(visited, 0, sizeof(visited));
    queue<pair<int, int>> q;
    q.push({ty, tx});
    visited[ty][tx] = true;

    int d = 0, customer = 0;
    while (!q.empty()) {
        int sz = q.size();
        while (sz--) {
            int i = q.front().first;
            int j = q.front().second;
            q.pop();
            if (passenger[i][j]) {
                if (customer) {
                    if (start[customer] > start[passenger[i][j]])
                        customer = passenger[i][j];
                }
                else
                    customer = passenger[i][j];
            }

            for (int k = 0; k < 4; k++) {
                int ni = i + dy[k];
                int nj = j + dx[k];
                if (ni < 1 || nj < 1 || ni > n || nj > n) continue;
                if (visited[ni][nj] || map[ni][nj]) continue;
                visited[ni][nj] = true;
                q.push({ni, nj});
            }
        }
        if (customer) break;
        d++;
    }
    if (!customer || dist[customer] == -1) return false;
    oil -= d + dist[customer];
    if (oil < 0) return false;
    ty = end[customer].first, tx = end[customer].second;
    passenger[start[customer].first][start[customer].second] = 0;
    oil += (dist[customer] << 1);
    return true;
}

int main() {
    cin.tie(0);cout.tie(0); ios::sync_with_stdio(false);
    cin >> n >> m >> oil;
    for (int y = 1; y <= n; y++) for (int x = 1; x <= n; x++) cin >> map[y][x];
        
    
    cin >> ty >> tx; int a, b, c, d;
    
    for (int i = 1; i <= m; i++) {
        cin >> a >> b >> c >> d;
        passenger[a][b] = i;
        dist[i] = bfs(a, b, c, d);
        start[i] = {a, b};
        end[i] = {c, d};}

    for (int i = 0; i < m; i++) {
        if (!get_customer()) { cout << -1; return 0;}}
    
    cout << oil;}
