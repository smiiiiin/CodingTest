//백준 14501
#include <iostream>
#include <algorithm> //max함수
using namespace std;

int n; //전역 변수 남은 일수(일하는 일수)
int T[15], P[15]; //time, pay 배열
int ret{0};

int solve(int day){ //day부터 막날까지 최대이익 함수
    if(day>n+1) return -0x7ffffff;//어차피 max택하니까 작은값 넣기
    if(day==n+1) return 0; //호출될 수도 있어서
    
    //DP 동적계획법
    //max(그 날 일 안할경우, 할 경우 현재 일수에서 그날 일한다면 걸리는 날을 더해서
    //다음기회의 일수 일때 최대이익+ 그날 해서 나오는 돈:P[day] ) 중 하나를 고른다.
    //고르는 순간 solve에 의해서 일수가 자동으로 밀린다.
    ret= max(solve(day+1),solve(day+T[day])+P[day]);
    return ret;
}

int main() {
    
    cin>>n;
    //--n; 여기다 놓으면 for문 돌때 입력이 모자르게 된다.
    
    for(int i=0;i<n;++i){
        cin>>T[i]; cin>>P[i];
    }
    --n;
    int ret= solve(0);
    cout<<ret;
    
    return 0;
}
