//백준2143 두 배열의 합 
#include <bits/stdc++.h>
using namespace std;

const int INF = 1e9+1; const int minINF = -1e9-1;

int N,M,T; long long result = 0; 
int A[1001]; vector<int> sumA; int B[1001]; vector<int> sumB;


int main(){
	ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

	cin>>T; cin>>N;
	for(int i = 1;i<=N;++i){
		cin>>A[i]; A[i] += A[i-1];}

	cin>>M;
	for(int i = 1;i<=M;++i){
		cin>>B[i]; B[i] += B[i-1];}

	for(int i = 1;i<=N;++i){
		for(int j = 0;j<i;++j){
			sumA.push_back(A[i] - A[j]);}}
			
	for(int i = 1;i<=M;++i){
		for(int j = 0;j<i;++j){
			sumB.push_back(B[i] - B[j]);}}

	//sort(sumA.begin(),sumA.end());
	sort(sumB.begin(),sumB.end()); //왜 sumb벡터는 오름차순이 되어야하는가? 굳이 필요없는거 같은데 왜 없으면 틀릴까? 

	for(auto x : sumA){
		int high = upper_bound(sumB.begin(),sumB.end(),T-x) - sumB.begin();
		int low = lower_bound(sumB.begin(),sumB.end(),T-x) - sumB.begin();
		result += (high-low);}

	cout<<result;
    return 0;}
