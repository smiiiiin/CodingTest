//백준1759 암호만들기
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int L,C; vector<char> v; vector<char> res;

bool check(){
    int moum = 0;
    for(int i = 0 ; i< L ; i++){
        if(res[i] == 'a' || res[i] == 'e' || res[i] == 'i' || res[i] == 'o' || res[i] == 'u') moum++;}
    
    // 모음의 수 1개 이상, 자음의수 = 전체수 -모음의 수 . 2개이상.
    if(moum >=1 && L-moum >=2) return true;
    return false;}

void dfs(int node){
    if((int)res.size()==L){
        if(!check()) return;
        for(int k = 0 ; k< L ; k++) cout << res[k];
        cout << '\n';}
    
    for(int i = node ; i< C; i++){
        res.push_back(v[i]); //들어갈때 하나씩 추가해주고
        dfs(i+1);
        res.pop_back(); //나오면 하나 빼주고.
    }
    return;}

int main(void){
    ios::sync_with_stdio(false); cin.tie(NULL);
    cin >> L  >> C;
    for(int i = 0 ; i< C ; i++){
        char temp; cin >> temp;
        v.push_back(temp);}
    
    sort(v.begin(), v.end()); //정렬하고 dfs(0)시작.
    dfs(0);}
    
    
// 왜 이건 아무것도 안나오지?     
// 백준 1759 암호만들기 
#include <iostream>
#include <vector>
#include <algorithm>
#include <cstring>
using namespace std;

int l,c; vector<char> v; vector <char> res;
bool visited[27];

void dfs(int node){
    visited[node]=1;
    v.push_back(node);
    
    if(node==c-1) {
        if(!visited[node]) return;
        for(int i=0;i<c;i++) cout<<res[v[i]]<<" ";
    }
    
    for(int i=node+1;i<l;i++){
        if(visited[i]) continue;
        visited[i]=1;
        v.push_back(i);
        dfs(i);
        visited[i]=0;
        v.pop_back();
        }   
}

int main(){
    memset(visited,0,sizeof(visited));
    cin>>l>>c;
    char ch;
    for(int i=0;i<c;i++) {cin>>ch; res.push_back(ch);}
    sort(res.begin(), res.end());
    for(int i=0;i<l;i++) dfs(i);
}
