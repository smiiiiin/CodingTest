//백준 1261 알고스팟
#include <iostream>
#include <string>
#include <vector>
#include <queue>
#define MAX 101
#define INF 987654321 //or 0x3f3f3f
using namespace std;
int n, m; int map[MAX][MAX]; int wall[MAX][MAX];
int dy[4]= { -1,1,0,0 }; int dx[4]={0,0,-1,1};

void bfs() {
    queue<pair<int, int>> q;
    q.push({ 0,0 });
    wall[0][0] = 0;

    while (!q.empty()) {
        int y = q.front().first;
        int x = q.front().second;
        q.pop();
        for (int d = 0; d < 4; d++) {
            int ny = y + dy[d]; int nx = x + dx[d];
            if (ny <0 || nx<0 || ny>=m || nx>=n ) continue;
            if (map[ny][nx] == 1) {
                if (wall[ny][nx] > wall[y][x] + 1) {
                    wall[ny][nx] = wall[y][x] + 1;
                    q.push({ ny,nx });}}
            
            else if(map[ny][nx]==0) {
                if (wall[ny][nx] > wall[y][x]) {
                    wall[ny][nx] = wall[y][x];
                    q.push({ ny,nx });}}}
    }
}

int main() {
    ios_base::sync_with_stdio(false); cin.tie(NULL);
    cin >> n >> m;
    string str;
    for (int y = 0; y < m; y++) {
        cin >> str;
        for (int x = 0; x < n; x++) {
            wall[y][x] = INF;
            map[y][x] = str[x] - '0';}}
    
    bfs();
    cout << wall[m-1][n-1] << "\n";
    return 0;}
