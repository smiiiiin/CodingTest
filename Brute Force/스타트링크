//백준5014 스타트링크
#include <iostream>
#include <queue>
#include <vector>
#define MAX 1000001
using namespace std;
 
int F, S, G, U, D; int path[MAX]; bool visited[MAX];
vector<int> vec; queue<int> q;
 
void bfs(int v) {
    visited[v] = true; q.push(v);
    while (!q.empty()) {
        v = q.front(); q.pop();
        for (int i = 0; i < 2; i++) {
            int nv = v + vec[i];
            if(0>=nv|| nv>F) continue;
            if(visited[nv]) continue;
            visited[nv] = true;
            q.push(nv);
            path[nv] = path[v] + 1;}}}

int main() {
    cin >> F >> S >> G >> U >> D;
    vec.push_back(U); vec.push_back(D * -1);
    bfs(S);
    if (visited[G]) cout << path[G];
    else cout << "use the stairs";}
