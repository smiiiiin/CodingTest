// 백준 1963 소수경로
#include<iostream>
#include<cstring>
#include<queue>
#include<string>
#define MAX 10000
using namespace std;
 
bool arr[MAX];
bool Visit[MAX];
 
int Start, End;
 
void Initialize()
{
    memset(arr, true, sizeof(arr));
    for (int i = 2; i < MAX; i++)
    {
        for (int j = 2; i*j < MAX; j++)
        {
            arr[i*j] = false;
        }
    }
    memset(Visit, false, sizeof(Visit));
}
 
void Solution()
{
    queue<pair<int, int>> Q;
    Q.push({Start, 0});
    Visit[Start] = true;
 
    while (!Q.empty()){
        int Cur_Num = Q.front().first; int Cnt = Q.front().second; Q.pop();
 
        if (Cur_Num == End){
            cout << Cnt << "\n";
            return;}
 
        for (int i = 0; i < 4; i++)
        {
            int Next_Num;
            for (int j = 0; j < 10; j++)
            {
                string s = to_string(Cur_Num);
                s[i] = j + '0';
                Next_Num = stoi(s);
 
                if (arr[Next_Num] == false) continue;
                if (Visit[Next_Num] == true) continue;
                if (Next_Num >= 10000 || Next_Num < 1000) continue;
 
                Visit[Next_Num] = true;
                Q.push({Next_Num, Cnt + 1});                
            }
        }
    }
    cout << "Impossible" << "\n";
}
 
 
int main(void)
{
    ios::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
    int t; cin >> t;
    for (int T = 1; T <= t; T++){
        Initialize();
        cin >> Start >> End;
        Solution();}
    return 0;
}
